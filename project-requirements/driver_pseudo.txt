BEGIN StateCityReport
    Display menu
    Get menu choice from user
    WHILE (choice is not quit)
        IF (choice is valid)
            IF (choice is READ FILE)
                Call readFile
            ELSE IF (choice is MODIFY STATE)
                Call modifyState
            ELSE IF (choice is MODIFY CITY)
                Call modifyCity
            ELSE IF (choice is ADD CITY)
                Call addCity
            ELSE IF (choice is REMOVE CITY)
                Call removeCity
            ELSE IF (choice is PRODUCE REPORT)
                Call produceReport
            END IF
        ELSE
            Display invalid choice error
        END IF
        Display menu
        Get menu choice from user
    END WHILE
END StateCityReport

BEGIN readFile
    Prompt user for file to read
    Input fileName
    WHILE (fileName is not quit)
        IF (fileName exists)
            state = null
            Read line from file
            WHILE (line is not null)
                Split line into tokens by delim
                IF (num of tokens is one)
                    IF (state is not null)
                        Add state to states
                        Increment numOfStates
                    END IF
                    name = first Token
                    state = new state with name
                ELSE IF (num of tokens is two)
                    name = first token
                    IF (second token is numeric)
                        population = second token
                        Call addCity
                    ELSE
                        Display malformed line error
                    END IF
                ELSE
                    Display malformed line error
                END IF
                Read line from file
            END WHILE
        ELSE
            Display file not found error
        END IF
        Prompt user for file to read
        Input fileName
    END WHILE
END readFile

BEGIN modifyState
    Display list of states of modify
    Prompt user for choice
    Input choice
    WHILE (choice is not QUIT)
        IF (choice is valid)
            Prompt user for new name
            Input newName
            IF (new name is not blank)
                Modify selected state name
            END IF
        ELSE
            Display state choice error
        END IF
        Display list of states of modify
        Prompt user for choice
        Input choice
    END WHILE
END modifyState

BEGIN modifyCity
    Display a list of states to user
    Prompt user for choice
    Input choice
    WHILE (choice is not quit)
        IF (choice is valid)
            Display of list of cities for user to modify
            Prompt user for choice
            Input cityChoice
            WHILE (cityChoice is not quit)
                IF (cityChoice is valid)
                    city = get ith city in state
                    name = city name
                    pop = city pop
                    Prompt user for new name
                    Input newName
                    IF (newName is not blank)
                        name = newName
                    END IF
                    Prompt user for new population
                    Input newPop
                    IF (newPop is not blank)
                        pop = newPop
                    END IF
                    Modify selected city with pop and name
                ELSE
                    Display invalid city choice error
                END IF
                Display of list of cities for user to modify
                Prompt user for choice
                Input cityChoice
            END WHILE
            -- RE-SORT states array --
        ELSE
            Display invalid state error
        END IF
        Display a list of states to user
        Prompt user for choice
        Input choice
    END WHILE
END modifyCity

BEGIN addCity
    Display a list of states to user
    Prompt user for choice
    Input choice
    WHILE (choice is not quit)
        IF (choice is valid)
            Display of list of cities in state
            Prompt user for new city name
            Input newCityName
            WHILE (newCityName is not quit)
                Prompt user for new city population
                Input newCityPopulation
                newCity = new City with newCityName and newCityPopulation
                Add newCity to state
                Prompt user for new city name
                Input newCityName
            END WHILE
            -- RE-SORT states array --
        ELSE
            Display invalid state choice error
        END IF
        Display a list of states to user
        Prompt user for choice
        Input choice
    END WHILE
END addCity

BEGIN removeCity
    Display a list of states to user
    Prompt user for choice
    Input choice
    WHILE (choice is not quit)
        IF (choice is valid)
            Display of list of cities for user to remove
            Prompt user for choice
            Input cityChoice
            WHILE (cityChoice is not quit)
            IF (cityChoice is valid)
                Remove selected city from state
            ELSE
                Display invalid city error
            END IF
            Display of list of cities for user to modify
            Prompt user for choice
            Input cityChoice
            END WHILE
        ELSE
            Display invalid state choice error
        END IF
        Display a list of states to user
        Prompt user for choice
        Input choice
    END WHILE
END removeCity

BEGIN produceReport
    Prompt user for file to write to
    Input fileName
    FOR (state in states)
        Display total/states city report
        Write state name and population to fileName
    END FOR
END produceReport
